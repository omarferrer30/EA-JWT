{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/tasks.service\";\nimport * as i2 from \"@angular/common\";\nfunction PrivateTasksComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Datos del Usuario\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\")(4, \"strong\");\n    i0.ɵɵtext(5, \"Nombre de usuario:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\")(8, \"strong\");\n    i0.ɵɵtext(9, \"Email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.userData.username, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.userData.email, \"\");\n  }\n}\nexport class PrivateTasksComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n  }\n  ngOnInit() {\n    this.taskService.getPrivateTasks().subscribe(res => {\n      this.userData = res;\n      console.log('Datos del usuario:', this.userData);\n    }, err => {\n      console.error('Error al obtener los datos del usuario:', err);\n    });\n  }\n  static #_ = this.ɵfac = function PrivateTasksComponent_Factory(t) {\n    return new (t || PrivateTasksComponent)(i0.ɵɵdirectiveInject(i1.TaskService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PrivateTasksComponent,\n    selectors: [[\"app-private-tasks\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"]],\n    template: function PrivateTasksComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, PrivateTasksComponent_div_0_Template, 11, 2, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.userData);\n      }\n    },\n    dependencies: [i2.NgIf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","userData","username","email","PrivateTasksComponent","constructor","taskService","ngOnInit","getPrivateTasks","subscribe","res","console","log","err","error","_","ɵɵdirectiveInject","i1","TaskService","_2","selectors","decls","vars","consts","template","PrivateTasksComponent_Template","rf","ctx","ɵɵtemplate","PrivateTasksComponent_div_0_Template","ɵɵproperty"],"sources":["C:\\Users\\super\\Desktop\\EA\\angular-nodejs-jwt\\frontend\\src\\app\\components\\private-tasks\\private-tasks.component.ts","C:\\Users\\super\\Desktop\\EA\\angular-nodejs-jwt\\frontend\\src\\app\\components\\private-tasks\\private-tasks.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TaskService } from '../../services/tasks.service'\n\n@Component({\n  selector: 'app-private-tasks',\n  templateUrl: './private-tasks.component.html',\n  styleUrls: ['./private-tasks.component.css']\n})\nexport class PrivateTasksComponent implements OnInit {\n  userData: any;\n\n  constructor(private taskService: TaskService) { }\n\n  ngOnInit(): void {\n    this.taskService.getPrivateTasks().subscribe(\n      (res: any) => {\n        this.userData = res;\n        console.log('Datos del usuario:', this.userData);\n      },\n      (err: any) => {\n        console.error('Error al obtener los datos del usuario:', err);\n      }\n    );\n  }\n}","<div *ngIf=\"userData\">\n    <h2>Datos del Usuario</h2>\n    <p><strong>Nombre de usuario:</strong> {{ userData.username }}</p>\n    <p><strong>Email:</strong> {{ userData.email }}</p>\n    <!-- Agrega más campos de usuario según tu modelo -->\n  </div>"],"mappings":";;;;;ICAAA,EAAA,CAAAC,cAAA,UAAsB;IACdD,EAAA,CAAAE,MAAA,wBAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC1BH,EAAA,CAAAC,cAAA,QAAG;IAAQD,EAAA,CAAAE,MAAA,yBAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,GAAuB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAClEH,EAAA,CAAAC,cAAA,QAAG;IAAQD,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,IAAoB;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IADZH,EAAA,CAAAI,SAAA,GAAuB;IAAvBJ,EAAA,CAAAK,kBAAA,MAAAC,MAAA,CAAAC,QAAA,CAAAC,QAAA,KAAuB;IACnCR,EAAA,CAAAI,SAAA,GAAoB;IAApBJ,EAAA,CAAAK,kBAAA,MAAAC,MAAA,CAAAC,QAAA,CAAAE,KAAA,KAAoB;;;ADKnD,OAAM,MAAOC,qBAAqB;EAGhCC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAiB;EAEhDC,QAAQA,CAAA;IACN,IAAI,CAACD,WAAW,CAACE,eAAe,EAAE,CAACC,SAAS,CACzCC,GAAQ,IAAI;MACX,IAAI,CAACT,QAAQ,GAAGS,GAAG;MACnBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAACX,QAAQ,CAAC;IAClD,CAAC,EACAY,GAAQ,IAAI;MACXF,OAAO,CAACG,KAAK,CAAC,yCAAyC,EAAED,GAAG,CAAC;IAC/D,CAAC,CACF;EACH;EAAC,QAAAE,CAAA,G;qBAfUX,qBAAqB,EAAAV,EAAA,CAAAsB,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAArBf,qBAAqB;IAAAgB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRlChC,EAAA,CAAAkC,UAAA,IAAAC,oCAAA,kBAKQ;;;QALFnC,EAAA,CAAAoC,UAAA,SAAAH,GAAA,CAAA1B,QAAA,CAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}