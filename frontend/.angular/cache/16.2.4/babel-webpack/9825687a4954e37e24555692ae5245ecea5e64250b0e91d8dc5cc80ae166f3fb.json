{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n    this.URL = 'http://localhost:3000/api';\n  }\n  getPrivateTasks() {\n    // Obten el token de localStorage\n    const token = this.getToken();\n    // Configura las cabeceras con el token de autorización\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    // Realiza la solicitud GET con las cabeceras\n    return this.http.get(`${this.URL}/me`, {\n      headers\n    });\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  static #_ = this.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","TaskService","constructor","http","URL","getPrivateTasks","token","getToken","headers","set","get","localStorage","getItem","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\super\\Desktop\\EA\\angular-nodejs-jwt\\frontend\\src\\app\\services\\tasks.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  private URL = 'http://localhost:3000/api';\n\n  constructor(private http: HttpClient) { }\n\n  getPrivateTasks() {\n    // Obten el token de localStorage\n    const token = this.getToken();\n\n    // Configura las cabeceras con el token de autorización\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n\n    // Realiza la solicitud GET con las cabeceras\n    return this.http.get<any>(`${this.URL}/me`, { headers });\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n}"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAK9D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,GAAG,GAAG,2BAA2B;EAED;EAExCC,eAAeA,CAAA;IACb;IACA,MAAMC,KAAK,GAAG,IAAI,CAACC,QAAQ,EAAE;IAE7B;IACA,MAAMC,OAAO,GAAG,IAAIR,WAAW,EAAE,CAACS,GAAG,CAAC,eAAe,EAAE,UAAUH,KAAK,EAAE,CAAC;IAEzE;IACA,OAAO,IAAI,CAACH,IAAI,CAACO,GAAG,CAAM,GAAG,IAAI,CAACN,GAAG,KAAK,EAAE;MAAEI;IAAO,CAAE,CAAC;EAC1D;EAEAD,QAAQA,CAAA;IACN,OAAOI,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACtC;EAAC,QAAAC,CAAA,G;qBAlBUZ,WAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXjB,WAAW;IAAAkB,OAAA,EAAXlB,WAAW,CAAAmB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}