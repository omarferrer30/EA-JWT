{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { SigninComponent } from './components/signin/signin.component';\nimport { PrivateTasksComponent } from './components/private-tasks/private-tasks.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthGuard } from './auth.guard';\nimport { TokenInterceptorService } from './services/token-interceptor.service';\nimport { ClientComponent } from './client/client.component';\nimport * as i0 from \"@angular/core\";\nexport class AppModule {\n  static #_ = this.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n  static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [AuthGuard, {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    }],\n    imports: [BrowserModule, AppRoutingModule, FormsModule, HttpClientModule]\n  });\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, SignupComponent, SigninComponent, PrivateTasksComponent, ClientComponent],\n    imports: [BrowserModule, AppRoutingModule, FormsModule, HttpClientModule]\n  });\n})();","map":{"version":3,"names":["BrowserModule","FormsModule","AppRoutingModule","AppComponent","SignupComponent","SigninComponent","PrivateTasksComponent","HttpClientModule","HTTP_INTERCEPTORS","AuthGuard","TokenInterceptorService","ClientComponent","AppModule","_","_2","bootstrap","_3","provide","useClass","multi","imports","declarations"],"sources":["C:\\Users\\super\\Desktop\\EA\\angular-nodejs-jwt\\frontend\\src\\app\\app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {FormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { SigninComponent } from './components/signin/signin.component';\nimport { PrivateTasksComponent } from './components/private-tasks/private-tasks.component';\nimport {HttpClientModule,HTTP_INTERCEPTORS ,HttpRequest, HttpHandler, HttpEvent} from '@angular/common/http';\nimport{AuthGuard} from './auth.guard';\nimport { TokenInterceptorService } from './services/token-interceptor.service';\nimport { ClientComponent } from './client/client.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignupComponent,\n    SigninComponent,\n    PrivateTasksComponent,\n    ClientComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    AuthGuard,\n    {\n      provide:HTTP_INTERCEPTORS,\n      useClass:TokenInterceptorService,\n      multi:true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n"],"mappings":"AACA,SAASA,aAAa,QAAQ,2BAA2B;AACzD,SAAQC,WAAW,QAAO,gBAAgB;AAC1C,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,eAAe,QAAQ,sCAAsC;AACtE,SAASC,eAAe,QAAQ,sCAAsC;AACtE,SAASC,qBAAqB,QAAQ,oDAAoD;AAC1F,SAAQC,gBAAgB,EAACC,iBAAiB,QAA4C,sBAAsB;AAC5G,SAAOC,SAAS,QAAO,cAAc;AACrC,SAASC,uBAAuB,QAAQ,sCAAsC;AAC9E,SAASC,eAAe,QAAQ,2BAA2B;;AA2B3D,OAAM,MAAOC,SAAS;EAAA,QAAAC,CAAA,G;qBAATD,SAAS;EAAA;EAAA,QAAAE,EAAA,G;UAATF,SAAS;IAAAG,SAAA,GAFRZ,YAAY;EAAA;EAAA,QAAAa,EAAA,G;eARb,CACTP,SAAS,EACT;MACEQ,OAAO,EAACT,iBAAiB;MACzBU,QAAQ,EAACR,uBAAuB;MAChCS,KAAK,EAAC;KACP,CACF;IAAAC,OAAA,GAZCpB,aAAa,EACbE,gBAAgB,EAChBD,WAAW,EACXM,gBAAgB;EAAA;;;2EAYPK,SAAS;IAAAS,YAAA,GAtBlBlB,YAAY,EACZC,eAAe,EACfC,eAAe,EACfC,qBAAqB,EACrBK,eAAe;IAAAS,OAAA,GAGfpB,aAAa,EACbE,gBAAgB,EAChBD,WAAW,EACXM,gBAAgB;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}