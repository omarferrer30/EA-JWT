{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nexport let TokenInterceptorService = class TokenInterceptorService {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  intercept(req, next) {\n    const tokenizedReq = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.authService.getToken()}`\n      }\n    });\n    return next.handle(tokenizedReq);\n  }\n};\nTokenInterceptorService = __decorate([Injectable({\n  providedIn: 'root'\n})], TokenInterceptorService);","map":{"version":3,"names":["Injectable","TokenInterceptorService","constructor","authService","intercept","req","next","tokenizedReq","clone","setHeaders","Authorization","getToken","handle","__decorate","providedIn"],"sources":["C:\\Users\\super\\Desktop\\EA\\angular-nodejs-jwt\\frontend\\src\\app\\services\\token-interceptor.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpInterceptor,HttpRequest,HttpHandler,HttpEvent} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(\n    private authService: AuthService\n  ) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const tokenizedReq = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.authService.getToken()}`\n      }\n    });\n    return next.handle(tokenizedReq);\n  }\n}"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAQnC,WAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAElCC,YACUC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EACjB;EAEJC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,MAAMC,YAAY,GAAGF,GAAG,CAACG,KAAK,CAAC;MAC7BC,UAAU,EAAE;QACVC,aAAa,EAAE,UAAU,IAAI,CAACP,WAAW,CAACQ,QAAQ,EAAE;;KAEvD,CAAC;IACF,OAAOL,IAAI,CAACM,MAAM,CAACL,YAAY,CAAC;EAClC;CACD;AAdYN,uBAAuB,GAAAY,UAAA,EAHnCb,UAAU,CAAC;EACVc,UAAU,EAAE;CACb,CAAC,C,EACWb,uBAAuB,CAcnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}