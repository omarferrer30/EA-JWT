{"ast":null,"code":"\"use strict\";\n\n/* import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, } from '@angular/common/http'; // Importa HttpRequest\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(\n    private authService: AuthService\n  ) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler){\n    const tokenizedReq = req.clone({\n      setHeaders: {\n        Authorization: `x-access-token ${this.authService.getToken()}`\n      }\n    });\n    return next.handle(tokenizedReq);\n  }\n} */","map":{"version":3,"names":[],"sources":["C:\\Users\\super\\Desktop\\EA\\angular-nodejs-jwt\\frontend\\src\\app\\services\\token-interceptor.service.ts"],"sourcesContent":["/* import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, } from '@angular/common/http'; // Importa HttpRequest\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(\n    private authService: AuthService\n  ) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler){\n    const tokenizedReq = req.clone({\n      setHeaders: {\n        Authorization: `x-access-token ${this.authService.getToken()}`\n      }\n    });\n    return next.handle(tokenizedReq);\n  }\n} */"],"mappings":";;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}